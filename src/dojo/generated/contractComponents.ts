/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Inventory: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, key1: RecsType.Number, amount1: RecsType.Number, key2: RecsType.Number, amount2: RecsType.Number, key3: RecsType.Number, amount3: RecsType.Number },
        {
          metadata: {
            name: "Inventory",
            types: ["u32","u32","u32","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Machine: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, x: RecsType.Number, y: RecsType.Number, machine_type: RecsType.Number, direction: RecsType.Number, source: RecsType.Number, source_dist: RecsType.Number, resource_type: RecsType.Number, placed_at: RecsType.Number, last_compute_at: RecsType.Number },
        {
          metadata: {
            name: "Machine",
            types: ["u32","u32","u32","u32","u32","u32","u32","u32","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    MachineAtPosition: (() => {
      return defineComponent(
        world,
        { x: RecsType.Number, y: RecsType.Number, id: RecsType.Number },
        {
          metadata: {
            name: "MachineAtPosition",
            types: ["u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Position: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number } },
        {
          metadata: {
            name: "Position",
            types: ["contractaddress","u32","u32"],
            customTypes: ["Vec2"],
          },
        }
      );
    })(),
  };
}
